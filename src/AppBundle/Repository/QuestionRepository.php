<?php

namespace AppBundle\Repository;
use Doctrine\ORM\EntityRepository;

/**
 * QuestionRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class QuestionRepository extends EntityRepository
{
    public function listquestion(){
        $em = $this->getEntityManager();
        $query = $em->createQuery(
            'SELECT  l.lId,l.lTitle,q.qId,q.qQuestion,q.qOption1,q.qOption2,q.qOption3,q.qOption4,q.qRightNumber FROM '
                . 'AppBundle:Lesson l  INNER JOIN '
                . 'AppBundle:Question q '
                . 'With  l.lId=q.lId Order By q.qId'
            );        
        return $query->getResult();
    }
    
    public function listquestion2($uid){
        $les_arr = array();
        $em = $this->getEntityManager();
        $query = $em->createQuery(
            'SELECT  l.lId,l.lTitle FROM AppBundle:Lesson l'
            );        
        $lessons = $query->getResult();
        foreach  ($lessons as $lesson){
            $data = array();
            $data['lid'] = $lesson['lId'];
            $data['ltitle'] = $lesson['lTitle'];
            
            $query2 = $em->createQuery(
            'SELECT q.qId,q.qQuestion,q.qOption1,q.qOption2,q.qOption3,q.qOption4,q.qRightNumber,a.aId,a.aAnswer FROM '
                    . 'AppBundle:Question q Left Join '
                    . '(SELECT an.* From AppBundle:Answer an WHERE an.uId= '. $uid .' ) a With a.qId=q.qId Where q.lId = ' . $lesson['lId']
            );  
            $questions = $query2->getResult();
            $con_arr = array();
            foreach ($questions as $question){
                array_push($con_arr, $question);
            }
            $data['question'] = $con_arr;
            array_push($les_arr, $data);
        }
        return $les_arr;
    }
}
